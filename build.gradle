buildscript {

    ext {
        jacksonVersion = "2.17.2"
        kotlinVersion = "2.0.0"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.9.20"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    }
}

apply plugin: "signing"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.dokka"
apply plugin: "io.codearte.nexus-staging"

group = "io.github.subiyacryolite"
version = "20.5-SNAPSHOT"
archivesBaseName = project.name
description = "A dynamic, cross platform and high performance data-mapper. JDS is designed to assist in rapid development and the creation of robust, strongly typed, field dictionaries"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://maven.atlassian.com/3rdparty/" }
    maven { url "https://clojars.org/repo/" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.slf4j:slf4j-jdk14:2.0.13"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonVersion"
    testImplementation 'org.xerial:sqlite-jdbc:3.41.2.2'
    testImplementation 'com.microsoft.sqlserver:mssql-jdbc:10.2.1.jre8'
    testImplementation 'org.postgresql:postgresql:42.7.2'
    testImplementation 'com.mysql:mysql-connector-j:9.0.0'
    testImplementation 'org.mariadb.jdbc:mariadb-java-client:3.0.5'
    testImplementation "com.oracle:ojdbc6:12.1.0.1-atlassian-hosted"
    testImplementation "com.zaxxer:HikariCP:5.0.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.9.0"
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "Jenesis Data Store",
                "Implementation-Version": project.version,
                "Created-By": "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})",
        )
    }
}

test {
    useJUnitPlatform {
        includeTags 'standalone', 'SqLite'
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

if (project.hasProperty("ossrhUsername")) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { deployment -> signing.signPom(deployment) }
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
                pom.project {
                    name "Jenesis Data Store"
                    packaging "jar"
                    description = project.description
                    url "https://github.com/SubiyaCryolite/jds"
                    scm {
                        connection "scm:git:git@github.com:SubiyaCryolite/jds.git"
                        developerConnection "scm:git:git@github.com:SubiyaCryolite/jds.git"
                        url "https://github.com/SubiyaCryolite/jds"
                    }
                    licenses {
                        license {
                            name "The 3-Clause BSD License"
                            url "https://opensource.org/licenses/BSD-3-Clause"
                        }
                    }
                    developers {
                        developer {
                            id "SubiyaCryolite"
                            name "Ifunga Ndana"
                            email "ifungandana@gmail.com"
                        }
                    }
                }
            }
        }
    }
}

nexusStaging {
    packageGroup = "io.github.subiyacryolite"
    stagingProfileId = "57cb63f09e7fd5"
}